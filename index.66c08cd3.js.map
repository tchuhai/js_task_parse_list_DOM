{"mappings":"ACEA,IAGQ,EAHF,EAAgB,SAAS,aAAa,CAAC,MAa7C,SAAS,EAAkB,CAAK,EAG9B,OAAO,SAAS,AAFO,EAAM,UAAU,CAAC,IAAK,IAEd,KAAK,CAAC,GACvC,CAdQ,EAAmB,MAAM,IAAI,CAAC,AAyB7B,EAzBkC,QAAQ,EAAE,IAAI,CACrD,SAAC,CAAA,CAAK,CADR,EAEI,OAAA,EAAkB,EAAI,OAAO,CAAC,MAAM,EACpC,EAAkB,EAAI,OAAO,CAAC,MAAM,C,GAGxC,AAmBO,EAnBF,SAAS,CAAG,GACjB,EAAiB,OAAO,CAAC,SAAC,CAA1B,EAAiC,OAAA,AAkB1B,EAlB+B,WAAW,CAAC,E,GAU3C,MAAM,IAAI,CAAC,AASP,EATY,QAAQ,EAAE,GAAG,CAAC,SAAC,CAAtC,EAA8C,MAAA,CAC5C,KAAM,EAAG,WAAW,CAAC,IAAI,GACzB,SAAU,EAAG,OAAO,CAAC,QAAQ,CAC7B,OAAQ,EAAG,OAAO,CAAC,MAAM,CACzB,IAAK,EAAG,OAAO,CAAC,GAAG,AACrB,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar employeesList = document.querySelector(\"ul\");\nfunction sortList(list) {\n    var sortedEmployeers = Array.from(list.children).sort(function(el1, el2) {\n        return getNumericalValue(el2.dataset.salary) - getNumericalValue(el1.dataset.salary);\n    });\n    list.innetHTML = \"\";\n    sortedEmployeers.forEach(function(el) {\n        return list.appendChild(el);\n    });\n}\nfunction getNumericalValue(value) {\n    var nomalizedValue = value.replaceAll(\",\", \"\");\n    return parseInt(nomalizedValue.slice(1));\n}\nfunction getEmployees(list) {\n    return Array.from(list.children).map(function(el) {\n        return {\n            name: el.textContent.trim(),\n            position: el.dataset.position,\n            salary: el.dataset.salary,\n            age: el.dataset.age\n        };\n    });\n}\nsortList(employeesList);\ngetEmployees(employeesList);\n\n//# sourceMappingURL=index.66c08cd3.js.map\n","'use strict';\n\nconst employeesList = document.querySelector('ul');\n\nfunction sortList(list) {\n  const sortedEmployeers = Array.from(list.children).sort(\n    (el1, el2) =>\n      getNumericalValue(el2.dataset.salary) -\n      getNumericalValue(el1.dataset.salary),\n  );\n\n  list.innetHTML = '';\n  sortedEmployeers.forEach((el) => list.appendChild(el));\n}\n\nfunction getNumericalValue(value) {\n  const nomalizedValue = value.replaceAll(',', '');\n\n  return parseInt(nomalizedValue.slice(1));\n}\n\nfunction getEmployees(list) {\n  return Array.from(list.children).map((el) => ({\n    name: el.textContent.trim(),\n    position: el.dataset.position,\n    salary: el.dataset.salary,\n    age: el.dataset.age,\n  }));\n}\n\nsortList(employeesList);\ngetEmployees(employeesList);\n"],"names":["sortedEmployeers","employeesList","document","querySelector","getNumericalValue","value","parseInt","nomalizedValue","replaceAll","slice","Array","from","list","children","sort","el1","el2","dataset","salary","innetHTML","forEach","el","appendChild","map","name","textContent","trim","position","age"],"version":3,"file":"index.66c08cd3.js.map"}